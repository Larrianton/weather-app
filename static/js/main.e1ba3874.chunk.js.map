{"version":3,"sources":["components/Display/WeatherDisplay.module.css","components/Greetings/Greetings.module.css","components/Search/Search.module.css","components/Clock/Clock.module.css","components/Alert/Alert.tsx","components/Display/Display.tsx","store/types.ts","store/actions/AlertActions.ts","components/Search/Search.tsx","store/actions/WeatherActions.ts","assets/images/preloader.svg","components/Weather/Weather.tsx","components/Clock/Clock.tsx","components/Greetings/Greetings.tsx","App.tsx","reportWebVitals.ts","store/reducers/weatherReducer.ts","store/reducers/alertReducer.ts","store/store.ts","index.tsx"],"names":["module","exports","Alert","message","className","Display","data","fahrenheit","main","temp","toFixed","celsius","s","container","header","style","marginBottom","name","sys","country","weather","description","src","icon","alt","levelItem","humidity","pressure","wind","speed","GET_WEATHER","SET_LOADING","SET_ERROR","SET_ALERT","setAlert","type","payload","Search","title","dispatch","useDispatch","useState","city","setCity","searchBlock","onSubmit","e","preventDefault","trim","axios","get","then","res","catch","err","response","getWeather","placeholder","maxWidth","value","onChange","currentTarget","Weather","weatherData","useSelector","state","loading","error","alertMsg","alert","preloader","getTwoDigitsString","num","Clock","Date","setState","useEffect","intervalId","setInterval","console","log","clearInterval","secondsString","getSeconds","minutesString","getMinutes","hoursString","getHours","clockBlock","Greetings","curTime","greetings","cssStyle","color","greetingsBlockWrapper","greetingsBlock","greetingsHeader","greetingsMenu","to","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1ba3874.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WeatherDisplay_container__1pzWK\",\"main\":\"WeatherDisplay_main__2sqkk\",\"levelItem\":\"WeatherDisplay_levelItem__uysoF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greetingsBlockWrapper\":\"Greetings_greetingsBlockWrapper__fnWIC\",\"greetingsMenu\":\"Greetings_greetingsMenu__1GAXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBlock\":\"Search_searchBlock__9qM7E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clockBlock\":\"Clock_clockBlock__2cTwG\"};","import React, { FC } from 'react';\r\n\r\ninterface AlertProps {\r\n    message: string;\r\n}\r\n\r\nconst Alert: FC<AlertProps> = ({ message}) => {\r\n    debugger\r\n    return(\r\n\r\n        <div className=\"alertBlock \">\r\n            {message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Alert;","import React, {FC} from 'react';\r\nimport {WeatherData} from \"../../store/types\";\r\nimport s from \"./WeatherDisplay.module.css\"\r\n\r\ntype WeatherDisplayProps = {\r\n    data: WeatherData\r\n}\r\nexport const Display: FC<WeatherDisplayProps> = ({data}) => {\r\n    const fahrenheit = (data.main.temp * 1.8 - 459.67).toFixed(2);\r\n    const celsius = (data.main.temp - 273.15).toFixed(2);\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.header}>\r\n                <h1 style={{marginBottom: 50}}>{data.name} - {data.sys.country}</h1>\r\n            </div>\r\n            <div className={s.main}>\r\n                    <div className=\"level-item\">\r\n                        <p className=\"heading\">{data.weather[0].description}</p>\r\n                        <p className=\"title\"><img\r\n                            src={`http://openweathermap.org/img/wn/${data.weather[0].icon}.png`}\r\n                            alt=\"icon-weather\"/></p>\r\n                    </div>\r\n                    <div className={s.levelItem}>\r\n                        <p className=\"heading\">temp</p>\r\n                        <div className=\"title\">\r\n                            <p className=\"mb-2\">{data.main.temp}K</p>\r\n                            <p className=\"mb-2\">{fahrenheit}<sup>&#8457;</sup></p>\r\n                            <p>{celsius}<sup>&#8451;</sup></p>\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.levelItem}>\r\n                        <p className=\"heading\">humidity</p>\r\n                        <p className=\"title\">{data.main.humidity}</p>\r\n\r\n                    </div>\r\n                    <div className={s.levelItem}>\r\n                        <p className=\"heading\">pressure</p>\r\n                        <p className=\"title\">{data.main.pressure}</p>\r\n                    </div>\r\n                    <div className={s.levelItem}>\r\n                        <p className=\"heading\">wind</p>\r\n                        <p className=\"title\">{data.wind.speed} m/s</p>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import {setAlert} from \"./actions/AlertActions\";\r\nimport {setError, setLoading} from \"./actions/WeatherActions\";\r\n\r\nexport const GET_WEATHER = 'GET_WEATHER';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const SET_ERROR = 'SET_ERROR';\r\nexport const SET_ALERT = 'SET_ALERT';\r\n\r\nexport type Weather = {\r\n    description: string;\r\n    icon: string;\r\n    id: number;\r\n    main: string;\r\n}\r\n\r\nexport type WeatherData = {\r\n    base: string;\r\n    clouds: {\r\n        all: number;\r\n    };\r\n    cod: number;\r\n    coord: {\r\n        lon: number;\r\n        lat: number;\r\n    };\r\n    dt: number;\r\n    id: number;\r\n    main: {\r\n        feels_like: number;\r\n        humidity: number;\r\n        pressure: number;\r\n        temp: number;\r\n        temp_max: number;\r\n        temp_min: number;\r\n    };\r\n    name: string;\r\n    sys: {\r\n        country: string;\r\n        id: number;\r\n        sunrise: number;\r\n        sunset: number;\r\n        type: number;\r\n    };\r\n    timezone: number;\r\n    visibility: number;\r\n    weather: Weather[];\r\n    wind: {\r\n        speed: number;\r\n        deg: number;\r\n    };\r\n}\r\n\r\nexport type WeatherError = {\r\n    response:{\r\n        data:{\r\n            cod:string,\r\n            message:string\r\n        }\r\n    }\r\n}\r\n\r\nexport type WeatherState = {\r\n    data: WeatherData | null;\r\n    loading: boolean;\r\n    error: string;\r\n}\r\n\r\ntype GetWeatherAction = {\r\n    type: \"GET_WEATHER\",\r\n    payload: WeatherData\r\n}\r\n\r\ntype SetLoadingAction = ReturnType<typeof setLoading>\r\ntype SetErrorAction = ReturnType<typeof setError>\r\n\r\nexport type WeatherAction = GetWeatherAction | SetLoadingAction | SetErrorAction;\r\n\r\nexport type AlertAction = ReturnType<typeof setAlert>\r\n\r\nexport type AlertState = {\r\n    message: string;\r\n}","import { SET_ALERT} from '../types';\r\n\r\nexport const setAlert = (message: string)=> {\r\n    return {\r\n        type: SET_ALERT,\r\n        payload: message\r\n    } as const\r\n}","import React, { FC, useState, FormEvent } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport s from \"./Search.module.css\"\r\nimport { setAlert } from '../../store/actions/AlertActions';\r\nimport { getWeather, setLoading } from '../../store/actions/WeatherActions';\r\n\r\ninterface SearchProps {\r\n    title: string;\r\n}\r\n\r\nconst Search: FC<SearchProps> = ({ title }) => {\r\n    const dispatch = useDispatch();\r\n    const [city, setCity] = useState('');\r\n\r\n    const changeHandler = (e: FormEvent<HTMLInputElement>) => {\r\n        setCity(e.currentTarget.value);\r\n    }\r\n\r\n    const submitHandler = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        if(city.trim() === '') {\r\n            return dispatch(setAlert('City is required!'));\r\n        }\r\n        dispatch(setLoading());\r\n        dispatch(getWeather(city))\r\n        dispatch(setAlert(''));\r\n    }\r\n\r\n    return(\r\n        <div className={s.searchBlock}>\r\n                    <h1 className=\"title\">{title}</h1>\r\n                    <form onSubmit={submitHandler}>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"\"\r\n                            placeholder=\"Enter city name\"\r\n                            style={{maxWidth: 300}}\r\n                            value={city}\r\n                            onChange={changeHandler}\r\n                        />\r\n                        <button>Search</button>\r\n                    </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;","import {GET_WEATHER, SET_ERROR, SET_LOADING, WeatherData, WeatherError} from '../types';\r\nimport axios from \"axios\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport const getWeather = (city: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        axios.get<WeatherData>(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=15860a445514fbd8dd267901c057961c`)\r\n            .then((res) => {\r\n                    dispatch({type: GET_WEATHER, payload: res.data})\r\n                }\r\n            )\r\n            .catch((err: WeatherError) => {\r\n                dispatch({type: GET_WEATHER, payload: \"\"})\r\n                dispatch({type: SET_ERROR, payload: err.response.data.message})\r\n            })\r\n    }\r\n}\r\n\r\nexport const setLoading = () => {\r\n    return {\r\n        type: SET_LOADING\r\n    } as const\r\n}\r\n\r\nexport const setError = () => {\r\n    return {\r\n        type: SET_ERROR,\r\n        payload: ''\r\n    } as const\r\n}","export default __webpack_public_path__ + \"static/media/preloader.8ffc7815.svg\";","import React from 'react';\r\nimport {RootState} from \"../../store/store\";\r\nimport {useSelector} from \"react-redux\";\r\nimport Alert from \"../Alert/Alert\";\r\nimport {Display} from \"../Display/Display\";\r\nimport Search from \"../Search/Search\";\r\nimport preloader from \"../../assets/images/preloader.svg\"\r\n\r\n\r\nexport const Weather = () => {\r\n    const weatherData = useSelector((state: RootState) => state.weather.data);\r\n    const loading = useSelector((state: RootState) => state.weather.loading);\r\n    const error = useSelector((state: RootState) => state.weather.error);\r\n    const alertMsg = useSelector((state: RootState) => state.alert.message);\r\n    return (\r\n        <div className=\"weatherBlock\">\r\n            <Search title=\"Enter city name and press search button\" />\r\n            {loading ? <img className=\"isLoading\" src={preloader} alt=\"preloader\"/> : weatherData && <Display data={weatherData} />}\r\n\r\n            {alertMsg && <Alert message={alertMsg}/>}\r\n            {error && <Alert message={error}/>}\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport style from './Clock.module.css';\r\n\r\nconst getTwoDigitsString = (num: number) => num < 10 ? \"0\" + num : num\r\n\r\n\r\nexport const Clock = () => {\r\n    const [state, setState] = useState(new Date())\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setState(new Date())\r\n            console.log(\"Tick\")\r\n        }, 1000)\r\n        return () => {\r\n            clearInterval(intervalId)\r\n        }\r\n    }, [])\r\n    const secondsString = getTwoDigitsString(state.getSeconds())\r\n    const minutesString = getTwoDigitsString(state.getMinutes())\r\n    const hoursString = getTwoDigitsString(state.getHours())\r\n\r\n    return (\r\n        <div className={style.clockBlock}>\r\n            <h1> Current Time : </h1>\r\n            <span>{hoursString}</span>\r\n            :\r\n            <span>{minutesString}</span>\r\n            :\r\n            <span>{secondsString}</span>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from 'react';\nimport s from './Greetings.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nfunction Greetings() {\n    let curDate = new Date()\n    let curTime = curDate.getHours()\n    let greetings = \"\"\n    let cssStyle = {\n        color: \"greenyellow\"\n    }\n    if (curTime >= 6 && curTime <= 12) {\n        greetings = \"Good Morning\"\n    } else if (curTime >= 13 && curTime <= 18) {\n        greetings = \"Good Afternoon\"\n        cssStyle = {\n            color: \"yellow\"\n        }\n    } else {\n        greetings = \"Good Evening\"\n        cssStyle = {\n            color: \"red\"\n        }\n    }\n    return (\n        <div className={s.greetingsBlockWrapper}>\n            <div className={s.greetingsBlock}>\n                <div className={s.greetingsHeader}>\n                    <h1><span style={cssStyle}>{greetings}</span> dear Guest</h1>\n                </div>\n                <div className={s.greetingsMenu}>\n                    <button><NavLink to=\"/clock\">Clock</NavLink></button>\n                    <button><NavLink to=\"/weather\">Weather</NavLink></button>\n                </div>\n            </div>\n        </div>\n\n    );\n}\n\nexport default Greetings;\n","import React from 'react';\nimport './App.css';\nimport {Weather} from \"./components/Weather/Weather\";\nimport {Clock} from \"./components/Clock/Clock\";\nimport {Route, Switch} from \"react-router-dom\";\nimport Greetings from \"./components/Greetings/Greetings\";\n\nconst App = () => {\n    return (\n        <div className=\"App\">\n            <Switch>\n                <Route exact path={\"/\"}\n                       component={Greetings}/>\n                <Route exact path={\"/weather\"}\n                       component={Weather}/>\n                <Route exact path={\"/clock\"}\n                       component={Clock}/>\n            </Switch>\n        </div>\n\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { WeatherState, WeatherAction, GET_WEATHER, SET_LOADING, SET_ERROR } from \"../types\";\r\n\r\nconst initialState: WeatherState = {\r\n    data: null,\r\n    loading: false,\r\n    error: ''\r\n}\r\n\r\nexport const weatherReducer = (state:WeatherState = initialState, action: WeatherAction) :WeatherState=> {\r\n    switch(action.type) {\r\n        case GET_WEATHER:\r\n            return {\r\n                data: action.payload,\r\n                loading: false,\r\n                error: ''\r\n            }\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {AlertAction, AlertState, SET_ALERT} from \"../types\";\r\n\r\n\r\nconst initialState: AlertState = {\r\n    message: ''\r\n}\r\n\r\nexport const alertReducer =(state = initialState, action: AlertAction): AlertState => {\r\n    switch(action.type) {\r\n        case SET_ALERT:\r\n            return {\r\n                message: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {weatherReducer} from \"./reducers/weatherReducer\";\r\nimport {alertReducer} from \"./reducers/alertReducer\";\r\n\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    weather: weatherReducer,\r\n    alert: alertReducer\r\n});\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n);\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n          <Provider store={store}>\n    <App />\n          </Provider>\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}